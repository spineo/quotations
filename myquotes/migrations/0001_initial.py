# Generated by Django 3.0.7 on 2020-06-10 15:58

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import myquotes.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=100, unique=True)),
                ('birth_date', models.DateField()),
                ('death_date', models.DateField()),
                ('bio_extract', models.CharField(max_length=400)),
                ('bio_source_url', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', models.CharField(max_length=100, unique=True)),
                ('day', models.IntegerField(null=True, validators=[django.core.validators.MaxValueValidator(31), django.core.validators.MinValueValidator(1)])),
                ('month', models.CharField(choices=[('1', 'January'), ('2', 'February'), ('3', 'March'), ('4', 'April'), ('5', 'May'), ('6', 'June'), ('7', 'July'), ('8', 'August'), ('9', 'September'), ('10', 'October'), ('11', 'November'), ('12', 'December')], default=1, max_length=9, null=True)),
                ('year', models.IntegerField(null=True, validators=[myquotes.models.Event.max_value_current_year, django.core.validators.MinValueValidator(-1000)])),
                ('season', models.CharField(choices=[('WINTER', 'Winter'), ('SPRING', 'Spring'), ('SUMMER', 'Summer'), ('FALL', 'Fall')], max_length=6, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Keyword',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keyword', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Quotation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quotation', models.CharField(max_length=200, unique=True)),
                ('quotation_source', models.CharField(max_length=100, null=True)),
                ('author_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myquotes.Author')),
            ],
        ),
        migrations.CreateModel(
            name='QuotationLastShown',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_shown_date', models.DateField()),
                ('quotation_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='myquotes.Quotation')),
            ],
        ),
        migrations.CreateModel(
            name='QuotationKeyword',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keyword_id', models.ManyToManyField(to='myquotes.Keyword')),
                ('quotation_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='myquotes.Quotation')),
            ],
        ),
        migrations.CreateModel(
            name='EventKeyword',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_id', models.ManyToManyField(to='myquotes.Event')),
                ('keyword_id', models.ManyToManyField(to='myquotes.Keyword')),
            ],
        ),
        migrations.CreateModel(
            name='EventAuthor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='myquotes.Author')),
                ('event_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='myquotes.Event')),
            ],
        ),
    ]
